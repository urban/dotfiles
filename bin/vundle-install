#!/usr/bin/env bash
#
# Vundle install shell script
#
# This file:
#  - Clones or updates Vundle located at ~/.dotfiles/.vim/bundle/Vundle.vim
#
# More info:
#  - https://github.com/urban/dotfiles
#
# Author:
#  - Urban Faubion (urban.faubion@gmail.com)
#
# Licensed under MIT
# Copyright (c) 2015 Urban Faubion (urban.faubion@gmail.com)

### Configuration
#####################################################################

if [[ "$1" != "" ]]; then cat <<HELP

Usage: $(basename "$0")

See the README for documentation.
https://github.com/urban/dotfiles

Copyright (c) 2015 Urban Faubion
Licensed under the MIT license.
HELP
exit;
fi

# exit on error
set -o errexit
# exit when trying to use undeclared variables
set -o nounset

### Constants, Variables and Functions
#####################################################################
BUNDLE_DIR=~/.vim/bundle

function log_message()  { echo -e "\n\033[1m$@\033[0m"; }
function log_success()  { echo -e " \033[1;32m✔\033[0m  $@"; }
function log_error()    { echo -e " \033[1;31m✖\033[0m  $@"; }

### Main
#####################################################################

# Finish.
function finish() {
  # Cleanup.
  local status=$?
  if [ $status != 0 ]; then
    echo -e "\033[1;31mError!"
  else
  echo -e "\033[1;32mFinished!"
  fi
}
trap finish EXIT

# Tweak file globbing.
shopt -s dotglob
shopt -s nullglob

# Start.
log_message "Installing Vundle"

# Install Package Control
if [[ ! -e "$BUNDLE_DIR/Vundle.vim" ]]; then
  # Make directory if it doesn't already exist
  mkdir -p $BUNDLE_DIR
  # Download Vundle.
  git clone https://github.com/gmarik/Vundle.vim.git "$BUNDLE_DIR/Vundle.vim"
  log_success "Downloaded Vundle"
else
  log_message "Updating Vundle"
  cd $BUNDLE_DIR/Vundle.vim
  git pull
fi

log_message "Install Vim Plugins"
vim +PluginInstall +qall


